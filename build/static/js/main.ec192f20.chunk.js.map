{"version":3,"sources":["App.js","index.js"],"names":["FromVideoRecorder","push","isFlipped","countdownTime","mimeType","constraints","audio","video","width","exact","ideal","height","aspectRatio","resizeMode","onRecordingComplete","videoBlob","console","log","VideoRecordPage","props","className","style","maxWidth","history","VideoPreviewPage","location","state","src","window","URL","createObjectURL","autoPlay","loop","controls","download","href","App","to","path","component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"4PA2EMA,G,MAAoB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACI,kBAAC,IAAD,CACIC,WAAW,EAEXC,cAAe,EACfC,SAAS,6BACTC,YAAa,CACTC,OAAO,EACPC,MAAO,CACHC,MAAO,CAAEC,MAAO,IAAKC,MAAO,KAC5BC,OAAQ,CAAEF,MAAO,IAAKC,MAAO,KAC7BE,YAAa,CAAEH,MAAO,YAAcC,MAAO,aAC3CG,WAAY,mBAGpBC,oBAAqB,SAACC,GAElBC,QAAQC,IAAI,YAAaF,GACzBd,EAAK,gBAAiB,CAAEc,mBAMlCG,EAAkB,SAACC,GACrB,OACI,yBAAKC,UAAU,OACX,8CAAwB,IACxB,yBAAKC,MAAO,CAAEb,MAAO,OAAQc,SAAU,IAAKX,OAAQ,MAChD,kBAAC,EAAD,CAAmBV,KAAMkB,EAAMI,QAAQtB,OAAS,KAC7C,MAKbuB,EAAmB,SAACL,GACtB,OACI,yBAAKC,UAAU,OACX,+CAAyB,IACxBD,EAAMM,SAASC,OAASP,EAAMM,SAASC,MAAMX,WAC1C,yBAAKM,MAAO,CAAEb,MAAO,OAAQc,SAAU,IAAKX,OAAQ,MAChD,2BACIgB,IAAKC,OAAOC,IAAIC,gBACZX,EAAMM,SAASC,MAAMX,WAEzBP,MAAO,IACPG,OAAQ,IACRoB,UAAQ,EACRC,MAAI,EACJC,UAAQ,KAGjB,IACH,6BACI,uBACIC,UAAQ,EACRC,KAAMP,OAAOC,IAAIC,gBACbX,EAAMM,SAASC,MAAMX,YAH7B,eAaD,SAASqB,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUC,GAAG,eAAe5B,OAAK,EAAC6B,KAAK,MACvC,kBAAC,IAAD,CAAOA,KAAK,eAAeC,UAAWrB,IAAoB,IAC1D,kBAAC,IAAD,CAAOoB,KAAK,gBAAgBC,UAAWf,IAAqB,KACtD,KCjJtB,IAAMgB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACT,EAAD,OAEFI,K","file":"static/js/main.ec192f20.chunk.js","sourcesContent":["import React /*, { useEffect, useRef } */ from \"react\";\n// import { ReactMediaRecorder } from \"react-media-recorder\";\nimport VideoRecorder from \"react-video-recorder\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport \"./styles.css\";\n\n/*\nconst VideoPreview = ({ stream }) => {\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    if (videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n  if (!stream) {\n    return null;\n  }\n  return <video ref={videoRef} width={480} height={640} autoPlay />;\n};\n\nconst FromMediaRecorder = () => {\n  return (\n    <ReactMediaRecorder\n      video={{\n        width: { exact: 480, ideal: 480 },\n        height: { exact: 640, ideal: 640 },\n        aspectRatio: 0.75\n      }}\n      render={({\n        previewStream,\n        status,\n        startRecording,\n        stopRecording,\n        mediaBlobUrl\n      }) => {\n        return (\n          <div\n            style={{\n              border: \"1px solid black\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              flexDirection: \"column\"\n            }}\n          >\n            <p>{status}</p>\n            <button onClick={startRecording}>Start Recording</button>\n            <button onClick={stopRecording}>Stop Recording</button>\n            {status !== \"stopped\" ? (\n              <VideoPreview stream={previewStream} />\n            ) : (\n              <video\n                src={mediaBlobUrl}\n                autoplay\n                loop\n                width={480}\n                height={640}\n                style={{ border: \"2px solid red\" }}\n                controls\n              />\n            )}\n          </div>\n        );\n      }}\n    />\n  );\n};\n*/\n\nconst FromVideoRecorder = ({ push }) => {\n    return (\n        <VideoRecorder\n            isFlipped={false}\n            // isOnInitially\n            countdownTime={0}\n            mimeType=\"video/webm;codecs=vp8,opus\"\n            constraints={{\n                audio: true,\n                video: {\n                    width: { exact: 480, ideal: 480 },\n                    height: { exact: 640, ideal: 640 },\n                    aspectRatio: { exact: 0.7500000001, ideal: 0.7500000001 },\n                    resizeMode: \"crop-and-scale\"\n                }\n            }}\n            onRecordingComplete={(videoBlob) => {\n                // Do something with the video...\n                console.log(\"videoBlob\", videoBlob);\n                push(\"/videoPreview\", { videoBlob });\n            }}\n        />\n    );\n};\n\nconst VideoRecordPage = (props) => {\n    return (\n        <div className=\"App\">\n            <h1> Video record </h1>{\" \"}\n            <div style={{ width: \"100%\", maxWidth: 480, height: 640 }}>\n                <FromVideoRecorder push={props.history.push} />{\" \"}\n            </div>{\" \"}\n        </div>\n    );\n};\n\nconst VideoPreviewPage = (props) => {\n    return (\n        <div className=\"App\">\n            <h1> Video preview </h1>{\" \"}\n            {props.location.state && props.location.state.videoBlob && (\n                <div style={{ width: \"100%\", maxWidth: 480, height: 640 }}>\n                    <video\n                        src={window.URL.createObjectURL(\n                            props.location.state.videoBlob\n                        )}\n                        width={480}\n                        height={640}\n                        autoPlay\n                        loop\n                        controls\n                    />\n                </div>\n            )}{\" \"}\n            <div>\n                <a\n                    download\n                    href={window.URL.createObjectURL(\n                        props.location.state.videoBlob\n                    )}\n                >\n                    Download\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Redirect to=\"/videoRecord\" exact path=\"/\" />\n                <Route path=\"/videoRecord\" component={VideoRecordPage} />{\" \"}\n                <Route path=\"/videoPreview\" component={VideoPreviewPage} />{\" \"}\n            </Switch>{\" \"}\n        </Router>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}